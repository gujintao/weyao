<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
  xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:p="http://www.springframework.org/schema/p"
  xsi:schemaLocation="
     http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/tx
     http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
      http://www.springframework.org/schema/jdbc
      http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/aop
     http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
     http://www.springframework.org/schema/context
     http://www.springframework.org/schema/context/spring-context-3.0.xsd">
  <!-- 实现当前XLog服务需要调用redis时用到的redis配置信息 -->
	<bean id="masterName" class="org.springframework.data.redis.connection.RedisNode">
		<property name="name" value="${redis.masterMainName}"></property>
	</bean>
	<bean id="sentinelLogNode01" class="org.springframework.data.redis.connection.RedisNode">
		<constructor-arg name="host" value="${sentinel.main.node01.ip}" />
		<constructor-arg name="port" value="${sentinel.main.node01.port}" />
	</bean>
	<bean id="sentinelLogNode02" class="org.springframework.data.redis.connection.RedisNode">
		<constructor-arg name="host"  value="${sentinel.main.node02.ip}" />
		<constructor-arg name="port" value="${sentinel.main.node02.port}" />
	</bean>
	<bean id="sentinelLogNode03" class="org.springframework.data.redis.connection.RedisNode">
		<constructor-arg name="host"  value="${sentinel.main.node03.ip}" />
		<constructor-arg name="port" value="${sentinel.main.node03.port}" />
	</bean>
	
	<bean id="redisConfiguration" class="org.springframework.data.redis.connection.RedisSentinelConfiguration">
		<property name="master" ref="masterName"></property>
		<property name="sentinels">
			<set>
				<ref bean="sentinelLogNode01" />
				<ref bean="sentinelLogNode02" />
				<ref bean="sentinelLogNode03" />
			</set>
		</property>
	</bean>
	
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
	    <property name="maxTotal" value="${redis.maxActive}" />
	    <property name="maxIdle" value="${redis.maxIdle}" />
	    <property name="maxWaitMillis" value="${redis.maxWait}" />
	    <property name="testOnBorrow" value="${redis.testOnBorrow}" />
	</bean>
	
	<bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
	  <property name="usePool" value="true"></property>
	  <property name="poolConfig" ref="jedisPoolConfig"></property>
	  <property name="password" value="${redis.pass}" />
	  <property name="timeout" value="${redis.timeout}" />
	  <property name="database" value="${redis.default.db}" />
	  <constructor-arg index="0" ref="redisConfiguration" />
	</bean>
		
	<!-- <bean id="redisTemplateLog" class="com.dhf.redis.TaxiStringRedisTemplate"
		p:connection-factory-ref="connectionFactoryLog" /> -->
	<bean id="redisTemplate"
	    class="org.springframework.data.redis.core.StringRedisTemplate"
	    p:connection-factory-ref="connectionFactory" />
		
	<bean id="redisService" class="com.weyao.redis.DefaultRedisService">
	    <property name="redisTemplate" ref="redisTemplate" />
	</bean>
</beans>